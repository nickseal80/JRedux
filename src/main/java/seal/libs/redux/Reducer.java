package seal.libs.redux;

public interface Reducer
{
    /**
     * Возвращает текущее состояние объекта.
     * <p>
     * Метод возвращает экземпляр класса State, который представляет текущее состояние,
     * связанное с объектом. Это состояние может включать в себя различные данные,
     * необходимые для определения поведения или статуса объекта в данный момент времени.
     *
     * @return текущее состояние объекта в виде экземпляра класса State.
     */
    State getState();

    /**
     * Устанавливает начальное состояние объекта.
     * <p>
     * Метод принимает объект состояния и задает его как начальное состояние.
     * Этот метод должен вызываться перед выполнением каких-либо операций,
     * зависящих от состояния, чтобы гарантировать, что объект находится
     * в корректном начальном состоянии.
     *
     * @param state объект состояния, который будет установлен в качестве начального.
     */
    void setInitialState(State state);

    /**
     * Применяет указанное действие к текущему состоянию и возвращает новое состояние.
     * <p>
     * Метод принимает объект типа Action, который определяет, как должно быть изменено текущее состояние.
     * Результатом работы метода является новое состояние, полученное в результате применения действия.
     *
     * @param action действие, которое будет применено к текущему состоянию
     * @return новое состояние после применения действия
     */
    State reduce(Action<Object> action);
}
